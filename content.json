{"meta":{"title":"Welcome to Phil's","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"MySQL bottleneck analysis","slug":"MySQL-bottleneck-analysis","date":"2016-11-14T05:29:35.000Z","updated":"2018-03-27T05:33:55.024Z","comments":true,"path":"2016/11/14/MySQL-bottleneck-analysis/","link":"","permalink":"http://yoursite.com/2016/11/14/MySQL-bottleneck-analysis/","excerpt":"","text":"Find bottleneck IOPS Input/output operations per second (IOPS, pronounced eye-ops) is a performance measurement used to characterize computer storage devices like hard disk drives (HDD), solid state drives (SSD), and storage area networks (SAN). – Wikipedia’ IOAny system that involves with storage has IO bottleneck. Databases are just some data files, so interacting with a database is an IO operation. There are two situations when we are using MySQL, OLTP and OLAP. They is a difference regarding the aspect of using MySQL. OLTP: On-line Transaction Processing, business, focus on concurrency.OLAP: On-line Analytical Processing, log and data warehousing, focus on throughput. There will be an option when you install MySQL on Windows. CPUBe careful when using order and group by, since both of them consume computing resources, which means more CPU usage. NetworkIn a distributed environment, each node between databases is more likely to become a bottleneck. When bottleneck detected1) Hardware, OS, Network IO ( add more memory; improve IO performance) CPU (Multi-core) Network (MPLS）","categories":[],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]},{"title":"JasperReport","slug":"JasperReport","date":"2016-11-13T05:20:05.000Z","updated":"2018-03-27T05:22:46.407Z","comments":true,"path":"2016/11/13/JasperReport/","link":"","permalink":"http://yoursite.com/2016/11/13/JasperReport/","excerpt":"","text":"JasperReports is an open source Java reporting tool that can write to a variety of targets, such as: screen, a printer, into PDF, HTML, Microsoft Excel, RTF, ODT, Comma-separated values or XML files. It can be used in Java-enabled applications, including Java EE or web applications, to generate dynamic content. –Wikipedia Download it, unzip it. JasperReport Lib cannot run alone and we don’t really need to install it, we only need to cp it to classpath directory with all other jar files. JasperReport using AWT generate report, if using terminal and terminal only, then JasperReport is not a good choice. Generate report 123456789101112131415161718192021222324252627282930package jasperreport.javabean; import java.util.Date; public class User &#123; private String username; private Date birthday; public User(String username, Date birthday) &#123; this.username = username; this.birthday = birthday; &#125; public String getUsername() &#123; return username; &#125; public void setUsername(String username) &#123; this.username = username; &#125; public Date getBirthday() &#123; return birthday; &#125; public void setBirthday(Date birthday) &#123; this.birthday = birthday; &#125; &#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344package jasperreport.javabean; import java.io.InputStream; import java.util.ArrayList; import java.util.Date; import java.util.HashMap; import java.util.List; import java.util.Map; import net.sf.jasperreports.engine.JRExporterParameter; import net.sf.jasperreports.engine.JasperFillManager; import net.sf.jasperreports.engine.JasperPrint; import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource; import net.sf.jasperreports.engine.export.JRTextExporter; import net.sf.jasperreports.engine.export.JRTextExporterParameter; public class JasperReportWithJavaBean &#123; public static void export() throws Exception&#123; InputStream inputStream = JasperReportWithJavaBean.class.getResourceAsStream(&quot;JavaBeanReport.jasper&quot;); Map&lt;Object,Object&gt; parameters = new HashMap&lt;Object,Object&gt;(); List&lt;User&gt; users = new ArrayList&lt;User&gt;(); users.add(new User(&quot;user_01&quot;,new Date())); users.add(new User(&quot;user_02&quot;,new Date())); users.add(new User(&quot;user_03&quot;,new Date())); JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(users); JasperPrint jasperPrint = JasperFillManager.fillReport(inputStream, parameters, dataSource); JRTextExporter exporter = new JRTextExporter(); exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint); exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, &quot;javabean.txt&quot;); exporter.setParameter(JRTextExporterParameter.PAGE_WIDTH, 200); exporter.setParameter(JRTextExporterParameter.PAGE_HEIGHT, 100); exporter.exportReport(); &#125; public static void main(String[] args) throws Exception&#123; export(); &#125; &#125; 123456789101112131415161718192021222324252627&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;JasperReport&lt;/groupId&gt; &lt;artifactId&gt;JasperReport&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;net.sf.jasperreports&lt;/groupId&gt; &lt;artifactId&gt;jasperreports&lt;/artifactId&gt; &lt;version&gt;3.7.2&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt; &lt;artifactId&gt;groovy-all&lt;/artifactId&gt; &lt;version&gt;1.7.5&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.13&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/project&gt;","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Improve SQL Query Performance","slug":"Improve-SQL-Query-Performance","date":"2016-11-03T05:34:46.000Z","updated":"2018-03-27T05:36:28.315Z","comments":true,"path":"2016/11/03/Improve-SQL-Query-Performance/","link":"","permalink":"http://yoursite.com/2016/11/03/Improve-SQL-Query-Performance/","excerpt":"","text":"In general computer system, hard-drive read operations are about ten times more than write operation and in most cases, there are no performance issues with insert operation. The problems and bottlenecks are always detected in select queries. In this page, we summarize few different methods to improve SQL query performance. Avoid * in SELECT statement. Give the name of columns which you require. Avoid nchar and nvarchar if possible since both the data types takes just double memory as char and varchar. Avoid NULL in fixed-length field. In case of requirement of NULL, use variable-length (varchar) field that takes less space for NULL. Create Clustered and Non-Clustered Indexes. Most selective columns should be placed leftmost in the key of a non-clustered index. Better to create indexes on columns that have integer values instead of characters. Integer values use less overhead than character values. Use joins instead of sub-queries. Use Stored Procedure for frequently used data and more complex queries. Keep transaction as small as possible since transaction lock the processing tables data and may results into deadlocks. Avoid prefix “sp_” with user defined stored procedure name because SQL server first search the user defined procedure in the master database and after that in the current session database.","categories":[],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]},{"title":"Java Cache System","slug":"Java-Cache-System","date":"2016-10-13T05:24:59.000Z","updated":"2018-03-27T05:28:52.322Z","comments":true,"path":"2016/10/13/Java-Cache-System/","link":"","permalink":"http://yoursite.com/2016/10/13/Java-Cache-System/","excerpt":"","text":"JCS is a distributed caching system written in Java. It is intended to speed up applications by providing a means to manage cached data of various dynamic natures. Like any caching system, JCS is most useful for high read, low put applications. Latency times drop sharply and bottlenecks move away from the database in an effectively cached system. JCS 1.3 was the first official version. JCS 1.3 working on JDK 1.3+. JCS 2.0 working on JDK 1.6 and above. JCS 1.3 is stable, however it requires a lower version of JDK. JCS structure There are following jar files needed: commons-collections-2.1.1.jar commons-lang.2.3.jar commons-logging-1.0.4.jar concurrent-1.3.2.jar jcs-1.3.jar slf4j-api.jar It implements Serializable interface 12345678910111213public class UserInfo implements Serializable&#123; private String username; private String domain; public UserInfo(String name)&#123; this.username = name; &#125; public UserInfo(String name,String domain)&#123; this.username= name; this.domain =domain; &#125; &#125; Define Cache Class 12345678910111213141516171819202122232425262728293031323334353637383940 public class UserManager&#123; private JCS jcscache; private final String NAME_SPACE=\"userinfo\"; private static class UserManagerContainer&#123; private static UserManager instance = new UserManager(); &#125; public static UserManager getInstance()&#123; return UserManagerContainer.instance &#125; private UserManager()&#123; try&#123; jcscache= JCS.getInstance(NAME_SPACE); &#125; catch(CacheException e)&#123; &#125; &#125; public UserInfo get(String key)&#123; return (UserInfo) jcscache.get(key); &#125; pubilc void put(String key,UserInfo info,boolean isoverride)&#123; try&#123; if(isoverride)&#123; jcscache.put(key,info); &#125; else&#123; jcscache.putSafe(key,info); &#125; &#125; catch(CacheException e)&#123; &#125; &#125; &#125; JCS describe its functionality by configuration file, it’s easy to implement, all you need is change the values in configuration file.Configuration file: cache.ccf 12345678910111213jcs.default=DC jcs.defaultcacheattributes=org.engine.CompositeCacheAttributes jcs.defaultcacheattributes.MaxObjects=500000 jcs.defaultcacheattributes.MemoryCacheName=org.apache.jcs.engine.memory.lru.LRUMemoryCache jcs.defaultcacheattributes.UseMemoryShrinker=true jcs.defaultcacheattributes.MaxMemoryIdleTimeSeconds=1200 jcs.defaultcacheattributes.ShrinkerIntervalSeconds=30 jcs.defaultcacheattributes.MaxSpoolPerRun=500 jcs.default.elementattributes=org.apache.jcs.engine.ElementAttributes jcs.default.elementattributes.IsEternal=false jcs.auxiliary.DC=org.apache.jcs.auxiliary.disk.indexed.IndexedDiskCacheFactory jcs.auxiliary.DC.attributes=org.apache.jcs.auxiliary.disk.indexed.IndexedDiskCacheAttribute jcs.auxiliary.DC.attributes.DiskPatch=d:/memory","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Markdown all you need to know","slug":"Markdown-all-you-need-to-know","date":"2015-10-04T04:58:22.000Z","updated":"2018-03-27T05:14:05.503Z","comments":true,"path":"2015/10/04/Markdown-all-you-need-to-know/","link":"","permalink":"http://yoursite.com/2015/10/04/Markdown-all-you-need-to-know/","excerpt":"","text":"Here are lists of some of the most common use of Markdown. Headers123456# H1## H2### H3#### H4##### H5###### H6 H1H2H3H4H5H6Underline1--- three or more than three hyphens Superlink12345[linke name that would appear on the page](link address, &quot;title pop when hover&quot;)e.g.[phil&apos;s blog](http://www.philsblog.info, &quot;this is phil&apos;s blog&quot;)or you can use the link directly.&lt;http://www.philsblog.info&gt; linke name that would appear on the pagee.g.phil’s blogor you can use the link directly.http://www.philsblog.info Code referencing1use ``` at the begaining and end of your code block Highlight12*italic type***bold** italic typebold Image1![Alt text](https://media-cdn.tripadvisor.com/media/photo-s/0b/5d/38/4b/a-nice-small-water-fall.jpg &quot;Optional title&quot;) Lists12345678* Item* Item- Item- Item1. numbered - Mixed2. numbered * Mixed Item Item Item Item numbered Mixed numbered Mixed Blockquotes1234&gt; Quoted text.&gt; &gt; Quoted quote.&gt; * Quoted &gt; * List Quoted text. Quoted quote. Quoted List Preformatted123456Begin each line with two spaces or more to make text looke x a c t l y like you type it. Begin each line withtwo spaces or more tomake text looke x a c t l ylike you type it. Code1`This is code` This is code Code block1234~~~Code block is a bit tricky, since we are using code block to show you the syntaxyou can use three ~ surround your code~~~ 123```you can also use three ` for the same purpose``` Syntax highlighting123456```css#button &#123; border: none;&#125;``` 123#button &#123; border: none;&#125; Table12345| Tables | Are | Cool ||----------|:-------------:|------:|| col 1 is | left-aligned | $1600 || col 2 is | centered | $12 || col 3 is | right-aligned | $1 | Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1","categories":[],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://yoursite.com/tags/markdown/"}]},{"title":"Hello World","slug":"hello-world","date":"2013-09-04T02:58:22.000Z","updated":"2018-03-27T05:17:16.426Z","comments":true,"path":"2013/09/04/hello-world/","link":"","permalink":"http://yoursite.com/2013/09/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}