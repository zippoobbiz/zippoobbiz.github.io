{"meta":{"title":"Welcome to Phil's","subtitle":"Welcome","description":null,"author":"Phil Xu","url":"http://www.philsblog.info"},"pages":[{"title":"","date":"2018-03-27T06:14:26.000Z","updated":"2018-04-17T00:08:09.906Z","comments":true,"path":"about/index.html","permalink":"http://www.philsblog.info/about/index.html","excerpt":"","text":"Dear friend, If you’re reading this, you’ve known me from somewhere.And if you’ve come this far, maybe you’re willing to come a little further. I am a Developer, prefer but not limit to use Java language, having 4+ years of programming experience.I am not just a Programmer, I’d love to solve problems, find answers, and learn new things!I am passionate about my career, and wish devoute my next decade to achieve something. You can click the tab above to know more about my work history, find out what I designed and created in the past few years! Enough of my nonsense, here are some real stuff!!!! What I am good at!!! Skill detail Java CoreSpring frameworksJSP JSF JMS EJBLog4j Quartz Tomcat Glassfish Second language CPythonJava script Theory Design patternAlgorithm Linux Linux commandShell script Spring Spring bootSpring cloudSpring dataSpring mvcSpring aop Tools NginX Web services SOAPRESTFUL Version Control gitmercurial Hg Q KafkaactiveMq Testing TDDJunit DB MySqlPostgresmongoDBH2 CI/CD JenlinksAWS codeBuild/codePipeline IDE EclipseIntelliJ IDEANetBeans I am currently learning how to use Docker and Kubernetes to make product delivery easier.If they match your needs then do not hesitate to contact me!! I will ready for all kind of interview, testing.Wish to speak to you soon! To know more about me, probably you want to visit my linkedin Phillip xu"}],"posts":[{"title":"YAML Syntax","slug":"YAML-Syntax","date":"2018-04-15T23:27:47.000Z","updated":"2018-04-15T23:27:47.587Z","comments":true,"path":"2018/04/16/YAML-Syntax.html","link":"","permalink":"http://www.philsblog.info/2018/04/16/YAML-Syntax.html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Eclipse and IntelliJ IDEA Hotkeys","slug":"Eclipse-and-IntelliJ-IDEA-Hotkeys","date":"2017-09-15T23:30:12.000Z","updated":"2018-04-15T23:52:29.685Z","comments":true,"path":"2017/09/16/Eclipse-and-IntelliJ-IDEA-Hotkeys.html","link":"","permalink":"http://www.philsblog.info/2017/09/16/Eclipse-and-IntelliJ-IDEA-Hotkeys.html","excerpt":"","text":"Description Eclipse IntelliJ IDEA show the type hierachy F4 ctrl+h Findusages Ctrl+Shift+G ⌥F7 Go to line Ctrl+L ⌘L Open resource Ctrl+Shift+R ⇧⌘O Open type Ctrl+Shift+T ⌘O Back Ctrl+[ ⌘[ Forward Ctrl+] ⌘] Rename Ctrl+Alt+R ⇧F6","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"}],"tags":[{"name":"Eclipse","slug":"Eclipse","permalink":"http://www.philsblog.info/tags/Eclipse/"},{"name":"IntelliJ","slug":"IntelliJ","permalink":"http://www.philsblog.info/tags/IntelliJ/"}]},{"title":"Dockerfile reference","slug":"Dockerfile-reference","date":"2017-09-15T23:26:28.000Z","updated":"2018-04-15T14:50:14.952Z","comments":true,"path":"2017/09/16/Dockerfile-reference.html","link":"","permalink":"http://www.philsblog.info/2017/09/16/Dockerfile-reference.html","excerpt":"","text":"Use Dockerfike create you own docker image. DockerFile contains basic image info mainainer info image CMD container CMD 1234567891011121314#第一行必须指令基于的基础镜像From ubutu#维护者信息MAINTAINER docker_user docker_user@mail.com#镜像的操作指令apt/sourcelist.listRUN apt-get update &amp;&amp; apt-get install -y ngnix RUN echo &quot;\\ndaemon off;&quot;&gt;&gt;/etc/ngnix/nignix.conf#容器启动时执行指令CMD /usr/sbin/ngnix 1、From指令From 或者From : DockerFile第一条必须为From指令。如果同一个DockerFile创建多个镜像时，可使用多个From指令（每个镜像一次） 2、MAINTAINER格式为maintainer ，指定维护者的信息 3、RUN格式为Run 或者Run [“executable” ,”Param1”, “param2”]前者在shell终端上运行，即/bin/sh -C，后者使用exec运行。例如：RUN [“/bin/bash”, “-c”,”echo hello”]每条run指令在当前基础镜像执行，并且提交新镜像。当命令比较长时，可以使用“/”换行。 4、CMD指令支持三种格式：CMD [“executable” ,”Param1”, “param2”]使用exec执行，推荐CMD command param1 param2，在/bin/sh上执行CMD [“Param1”, “param2”] 提供给ENTRYPOINT做默认参数。 每个容器只能执行一条CMD命令，多个CMD命令时，只最后一条被执行。 5、EXPOSE 格式为 EXPOSE […] 。 告诉Docker服务端容器暴露的端口号，供互联系统使用。在启动Docker时，可以通过-P,主机会自动分配一个端口号转发到指定的端口。使用-P，则可以具体指定哪个本地端口映射过来 例如：EXPOSE 22 80 8443 6、ENV 格式为 ENV 。 指定一个环境变量，会被后续 RUN 指令使用，并在容器运行时保持。 1234ENV PG_MAJOR 9.3ENV PG_VERSION 9.3.4RUN curl -SL http://example.com/postgres-$PG_VERSION.tar.xz | tar -xJC /usr/src/postgress &amp;&amp; …ENV PATH /usr/local/postgres-$PG_MAJOR/bin:$PATH 7、ADD格式为 ADD 。 该命令将复制指定的 到容器中的 。 其中 可以是Dockerfile所在目录的一个相对路径；也可以是一个URL；还可以是一个tar文件（自动解压为目录）。则。 8、COPY 格式为 COPY 。 复制本地主机的 （为Dockerfile所在目录的相对路径）到容器中的 。 当使用本地目录为源目录时，推荐使用 COPY 。 9、ENTRYPOINT 两种格式： ENTRYPOINT [“executable”, “param1”, “param2”]ENTRYPOINT command param1 param2 （shell中执行）。配置容器启动后执行的命令，并且不可被 docker run 提供的参数覆盖。 每个Dockerfile中只能有一个 ENTRYPOINT ，当指定多个时，只有最后一个起效。 10、VOLUME 格式为 VOLUME [“/data”] 。 创建一个可以从本地主机或其他容器挂载的挂载点，一般用来存放数据库和需要保持的数据等。 11、USER 格式为 USER daemon 。 指定运行容器时的用户名或UID，后续的 RUN 也会使用指定用户。 当服务不需要管理员权限时，可以通过该命令指定运行用户。并且可以在之前创建所需要的用户，例如： RUN groupadd -r postgres &amp;&amp; useradd -r -g postgres postgres 。要临时获取管理员权限可以使用 gosu ，而不推荐 sudo 。 12、WORKDIR 格式为 WORKDIR /path/to/workdir 。 为后续的 RUN 、 CMD 、 ENTRYPOINT 指令配置工作目录。 可以使用多个 WORKDIR 指令，后续命令如果参数是相对路径，则会基于之前命令指定的路径。例如 WORKDIR /aWORKDIR bWORKDIR cRUN pwd则最终路径为 /a/b/c 。 13、ONBUILD 格式为 ONBUILD [INSTRUCTION] 。 配置当所创建的镜像作为其它新创建镜像的基础镜像时，所执行的操作指令。 例如，Dockerfile使用如下的内容创建了镜像 image-A 。 […]ONBUILD ADD . /app/srcONBUILD RUN /usr/local/bin/python-build –dir /app/src[…]如果基于A创建新的镜像时，新的Dockerfile中使用 FROM image-A 指定基础镜像时，会自动执行 ONBUILD 指令内容，等价于在后面添加了两条指令。123456FROM image-A#Automatically run the followingADD . /app/srcRUN /usr/local/bin/python-build --dir /app/src使用 ONBUILD 指令的镜像，推荐在标签中注明，例如 ruby:1.9-onbuild 。 三、创建镜像通过Docker Build 创建镜像。命令读取指定路径下（包括子目录）所有的Dockefile，并且把目录下所有内容发送到服务端，由服务端创建镜像。另外可以通过创建.dockerignore文件（每一行添加一个匹配模式）让docker忽略指定目录或者文件 格式为Docker Build [选项] 路径需要制定标签信息，可以使用-t选项例如：Dockerfile路径为 /tmp/docker_build/，生成镜像的标签为build_repo/my_images$dudo docker build -t build_repo/my_images /tmp/docker_build/","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"Docker","slug":"Tools/Docker","permalink":"http://www.philsblog.info/categories/Tools/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"http://www.philsblog.info/tags/Docker/"}]},{"title":"Big O Cheat sheets","slug":"Big-O-Cheat-sheets","date":"2017-08-15T14:15:43.000Z","updated":"2018-04-15T14:23:51.802Z","comments":true,"path":"2017/08/16/Big-O-Cheat-sheets.html","link":"","permalink":"http://www.philsblog.info/2017/08/16/Big-O-Cheat-sheets.html","excerpt":"","text":"Algorithm Structure Time:Best Time:Average Time:Worst Space:Worst Quick sort Array O(n log(n)) O(n log(n)) O(n2) O(n) Merge sort Array O(n log(n)) O(n log(n)) O(n log(n)) O(n) Heap sort Array O(n) O(n log(n)) O(n log(n)) O(1) Smooth sort Array O(n) O(n log(n)) O(n log(n)) O(1) Bubble sort Array O(n) O(n2) O(n2) O(1) Insertion sort Array O(n) O(n2) O(n2) O(1) Selection sort Array O(n2) O(n2) O(n2) O(1) Check this out","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://www.philsblog.info/categories/Algorithm/"},{"name":"Sort","slug":"Algorithm/Sort","permalink":"http://www.philsblog.info/categories/Algorithm/Sort/"}],"tags":[{"name":"Sort","slug":"Sort","permalink":"http://www.philsblog.info/tags/Sort/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://www.philsblog.info/tags/Algorithm/"},{"name":"big O","slug":"big-O","permalink":"http://www.philsblog.info/tags/big-O/"}]},{"title":"Linux Configuration Files","slug":"Linux-Configuration-Files","date":"2017-07-15T03:53:56.000Z","updated":"2018-04-17T00:18:15.858Z","comments":true,"path":"2017/07/15/Linux-Configuration-Files.html","link":"","permalink":"http://www.philsblog.info/2017/07/15/Linux-Configuration-Files.html","excerpt":"","text":"mysql configuration file~/.my.cnf 启动引导程序配置文件12LILO /etc/lilo.confGRUB /boot/grub/menu.lst 系统启动文件核脚本1234主启动控制文件 /etc/inittabSysV启动脚本的位置 /etc/init.d、/etc/rc.d/init.d或/etc/rc.dSysV启动脚本链接的位置 /etc/init.d/rc.d、/etc/rc.d/rc.d或/etc/rc.d本地启动脚本 /etc/rc.d/rc.local、/etc/init.d/boot.local或/etc/rc.boot里的文件 网络配置文件1234建立网络接口的脚本 /sbin/ifup保存网络配置数据文件的目录 /etc/network、/etc/sysconfig/network和/etc/sysconfig/network-scripts保存解析DNS服务的文件 /etc/resolv.confDHCP客户端的配置文件 /etc/dhclient.conf 超级服务程序配置文件和目录123inetd配置文件 /etc/inetd.confTCP Wrappers配置文件 /etc/hosts.allow和/etc/hosts.denyxinetd配置文件 /etc/xinetd.conf和/etc/xinetd.d目录里的文件 硬件配置1内核模块配置文件 /etc/modules.conf 硬件访问文件12Linux设备文件 /dev目录里保存硬件和驱动程序数据的文件 /proc目录里 扫描仪配置文件12SANE主配置 /etc/sane.d/dll.conf特定扫描仪的配置文件 /etc/sane.d目录里以扫描仪型号命名的文件 打印机配置文件1234BSD LPD核LPRng的本地打印机主配置文件 /etc/printcapCUPS本地打印机主配置和远程访问受权文件 /etc/cups/cupsd.confBSD LPD远程访问受权文件 /etc/hosts.lpdLPRng远程访问受权文件 /etc/lpd.perms 文件系统123文件系统表 /etc/fstab软驱装配点 /floppy 、/mnt/floppy 或/media/floppy光驱装配点 /cdrom 、/mnt/cdrom 或/media/cdrom shell 配置文件1234bash 系统非登录配置文件 /etc/bashrc 、/etc/bash.bashrc 或/etc/bash.bashrc.localbash 系统登录文件 /etc/profile 和/etc/profile.d 里的文件bash 用户非登录配置文件 ~/.bashrcbash 用户登录配置文件 ~/.profile XFree86 配置文件核目录12345XFree86 主配置文件 /etc/XF86config 、/etc/X11/XF86Config 或/etc/X11/XF86Config-4字体服务程序配置文件 /etc/X11/fs/configXft 1.x 配置文件 /etcX11/XftConfigXft 2.0 配置文件 /etc/fonts/fonts.conf字体目录 /usr/X11R6/lib/X11/fonts 和/usr/share/fonts Web 服务程序配置文件12Apache 主配置文件 /etc/apache 、/etc/httpd 或/httpd/conf 里的httpd.conf 或httpd2.conf 文件MIME 类型文件 与Apache 主配置文件在同一目录里的mime.types 或apache-mime.types 文件服务程序配置文件123456ProFTPd 配置文件 /etc/proftpd.confvsftpd 配置文件 /etc/vsftpd.confNFS 服务程序的输出定义文件 /etc/exportsNFS 客户端装配的NFS 输出 /etc/fstabSamba 配置文件 /etc/samba/smb.confSamba 用户配置文件 /etc/samba/smbpasswd 邮件服务程序配置文件123456sendmail 主配置文件 /etc/mail/sendmail.cfsendmail 源配置文件 /etc/mail/sendmail.mc 或/usr/share/sendmail/cf/cf/linux.smtp.mc 或其他文件Postfix 主配置文件 /etc/postfix/main.cfExim 主配置文件 /etc/exim/exim.cfProcmail 配置文件 /etc/procmailrc 或~/.procmailrcFetchmail 配置文件 ~/.fetchmailrc 远程登录配置文件12345SSH 服务程序配置文件 /etc/ssh/sshd_configSSH 客户端配置文件 /etc/ssh/ssh_configXDM 配置文件 /etc/X11/xdm 目录下GDM 配置文件 /etc/X11/gdm 目录下VNC 服务程序配置文件 /usr/X11R6/bin/vncserver 启动脚本和~/.vnc 目录里的文件 其他服务程序配置文件123DHCP 服务程序配置文件 /etc/dhcpd.confBIND 服务程序配置文件 /etc/named.conf 和/var/named/NTP 服务程序配置文件 /etc/ntp.conf Others1234567891011121314# Lists commands and times to run them for the cron deamon./etc/crontab # Specifies how host names are resolved./etc/host.conf # List hosts for name lookup use that are locally required./etc/hosts # A list of currently mounted file systems. Setup by boot scripts and updated by the mount command. /etc/mtab # Scripts or directories of scripts to run at startup or when changing run level. /etc/rc or /etc/rc.d or /etc/rc?.d # User aliases, path modifier, and functions.$HOME/.bashrc # Users environment stuff and startup programs.$HOME/.bash_profile","categories":[],"tags":[]},{"title":"JVM parameters","slug":"JVM-parameters","date":"2017-06-15T13:35:19.000Z","updated":"2018-04-15T13:43:59.727Z","comments":true,"path":"2017/06/15/JVM-parameters.html","link":"","permalink":"http://www.philsblog.info/2017/06/15/JVM-parameters.html","excerpt":"","text":"参数名称 含义 默认值 -Xms 初始堆大小 物理内存的1/64(&lt;1GB) 默认(MinHeapFreeRatio参数可以调整)空余堆内存小于40%时，JVM就会增大堆直到-Xmx的最大限制. -Xmx 最大堆大小 物理内存的1/4(&lt;1GB) 默认(MaxHeapFreeRatio参数可以调整)空余堆内存大于70%时，JVM会减少堆直到 -Xms的最小限制 -Xmn 年轻代大小(1.4or lator) 注意：此处的大小是（eden+ 2 survivor space).与jmap -heap中显示的New gen是不同的。整个堆大小=年轻代大小 + 年老代大小 + 持久代大小. 增大年轻代后,将会减小年老代大小.此值对系统性能影响较大,Sun官方推荐配置为整个堆的3/8 -XX:NewSize 设置年轻代大小(for 1.3/1.4) -XX:MaxNewSize 年轻代最大值(for 1.3/1.4) -XX:PermSize 设置持久代(perm gen)初始值 物理内存的1/64 -XX:MaxPermSize 设置持久代最大值 物理内存的1/4 -Xss 每个线程的堆栈大小 JDK5.0以后每个线程堆栈大小为1M,以前每个线程堆栈大小为256K.更具应用的线程所需内存大小进行 调整.在相同物理内存下,减小这个值能生成更多的线程.但是操作系统对一个进程内的线程数还是有限制的,不能无限生成,经验值在3000~5000左右 一般小的应用， 如果栈不是很深， 应该是128k够用的 大的应用建议使用256k。这个选项对性能影响比较大，需要严格的测试。（校长） 和threadstacksize选项解释很类似,官方文档似乎没有解释,在论坛中有这样一句话:”-Xss is translated in a VM flag named ThreadStackSize” 一般设置这个值就可以了。","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"Java","slug":"Tech/Java","permalink":"http://www.philsblog.info/categories/Tech/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://www.philsblog.info/tags/Java/"},{"name":"jvm","slug":"jvm","permalink":"http://www.philsblog.info/tags/jvm/"}]},{"title":"An A-Z Index of the Bash command line for Linux","slug":"An-A-Z-Index-of-the-Bash-command-line-for-Linux","date":"2017-06-15T12:16:10.000Z","updated":"2018-04-15T13:29:27.411Z","comments":true,"path":"2017/06/15/An-A-Z-Index-of-the-Bash-command-line-for-Linux.html","link":"","permalink":"http://www.philsblog.info/2017/06/15/An-A-Z-Index-of-the-Bash-command-line-for-Linux.html","excerpt":"","text":"name Description alias Create an alias • apropos Search Help manual pages (man -k) apt-get Search for and install software packages (Debian/Ubuntu) aptitude Search for and install software packages (Debian/Ubuntu) aspell Spell Checker awk Find and Replace text, database sort/validate/index basename Strip directory and suffix from filenames bash GNU Bourne-Again SHell bc Arbitrary precision calculator language bg Send to background bind Set or display readline key and function bindings • break Exit from a loop • builtin Run a shell builtin bzip2 Compress or decompress named file(s) cal Display a calendar case Conditionally perform a command cat Concatenate and print (display) the content of files cd Change Directory cfdisk Partition table manipulator for Linux chattr Change file attributes on a Linux file system chgrp Change group ownership chmod Change access permissions chown Change file owner and group chroot Run a command with a different root directory chkconfig System services (runlevel) cksum Print CRC checksum and byte counts clear Clear terminal screen cmp Compare two files comm Compare two sorted files line by line command Run a command - ignoring shell functions • continue Resume the next iteration of a loop • cp Copy one or more files to another location cron Daemon to execute scheduled commands crontab Schedule a command to run at a later time csplit Split a file into context-determined pieces curl Transfer data from or to a server cut Divide a file into several parts date Display or change the date &amp; time dc Desk Calculator dd Convert and copy a file, write disk headers, boot records ddrescue Data recovery tool declare Declare variables and give them attributes • df Display free disk space diff Display the differences between two files diff3 Show differences among three files dig DNS lookup dir Briefly list directory contents dircolors Colour setup for ‘ls’ dirname Convert a full pathname to just a path dirs Display list of remembered directories dmesg Print kernel &amp; driver messages du Estimate file space usage echo Display message on screen • egrep Search file(s) for lines that match an extended expression eject Eject removable media enable Enable and disable builtin shell commands • env Environment variables ethtool Ethernet card settings eval Evaluate several commands/arguments exec Execute a command exit Exit the shell expect Automate arbitrary applications accessed over a terminal expand Convert tabs to spaces export Set an environment variable expr Evaluate expressions false Do nothing, unsuccessfully fdformat Low-level format a floppy disk fdisk Partition table manipulator for Linux fg Send job to foreground fgrep Search file(s) for lines that match a fixed string file Determine file type find Search for files that meet a desired criteria fmt Reformat paragraph text fold Wrap text to fit a specified width. for Expand words, and execute commands format Format disks or tapes free Display memory usage fsck File system consistency check and repair ftp File Transfer Protocol function Define Function Macros fuser Identify/kill the process that is accessing a file gawk Find and Replace text within file(s) getopts Parse positional parameters grep Search file(s) for lines that match a given pattern groupadd Add a user security group groupdel Delete a group groupmod Modify a group groups Print group names a user is in gzip Compress or decompress named file(s) hash Remember the full pathname of a name argument head Output the first part of file(s) help Display help for a built-in command • history Command History hostname Print or set system name htop Interactive process viewer iconv Convert the character set of a file id Print user and group id’s if Conditionally perform a command ifconfig Configure a network interface ifdown Stop a network interface ifup Start a network interface up import Capture an X server screen and save the image to file install Copy files and set attributes iostat Report CPU and i/o statistics ip Routing, devices and tunnels jobs List active jobs • join Join lines on a common field kill Kill a process by specifying its PID killall Kill processes by name less Display output one screen at a time let Perform arithmetic on shell variables • link Create a link to a file ln Create a symbolic link to a file local Create a function variable • locate Find files logname Print current login name logout Exit a login shell • look Display lines beginning with a given string lpc Line printer control program lpr Off line print lprint Print a file lprintd Abort a print job lprintq List the print queue lprm Remove jobs from the print queue lsattr List file attributes on a Linux second extended file system lsblk List block devices ls List information about file(s) lsof List open files lspci List all PCI devices make Recompile a group of programs man Help manual mkdir Create new folder(s) mkfifo Make FIFOs (named pipes) mkfile Make a file mkisofs Create an hybrid ISO9660/JOLIET/HFS filesystem mknod Make block or character special files mktemp Make a temporary file more Display output one screen at a time most Browse or page through a text file mount Mount a file system mtools Manipulate MS-DOS files mtr Network diagnostics (traceroute/ping) mv Move or rename files or directories mmv Mass Move and rename (files) nc Netcat, read and write data across networks netstat Networking connections/stats nice Set the priority of a command or job nl Number lines and write files nohup Run a command immune to hangups notify-send Send desktop notifications nslookup Query Internet name servers interactively open Open a file in its default application op Operator access passwd Modify a user password paste Merge lines of files pathchk Check file name portability ping Test a network connection pgrep List processes by name pkill Kill processes by name popd Restore the previous value of the current directory pr Prepare files for printing printcap Printer capability database printenv Print environment variables printf Format and print data • ps Process status pushd Save and then change the current directory pv Monitor the progress of data through a pipe pwd Print Working Directory quota Display disk usage and limits quotacheck Scan a file system for disk usage ram ram disk device rar Archive files with compression rcp Copy files between two machines read Read a line from standard input • readarray Read from stdin into an array variable • readonly Mark variables/functions as readonly reboot Reboot the system rename Rename files renice Alter priority of running processes remsync Synchronize remote files via email return Exit a shell function rev Reverse lines of a file rm Remove files rmdir Remove folder(s) rsync Remote file copy (Synchronize file trees) screen Multiplex terminal, run remote shells via ssh scp Secure copy (remote file copy) sdiff Merge two files interactively sed Stream Editor select Accept keyboard input seq Print numeric sequences set Manipulate shell variables and functions sftp Secure File Transfer Program shift Shift positional parameters shopt Shell Options shutdown Shutdown or restart linux sleep Delay for a specified time slocate Find files sort Sort text files source Run commands from a file ‘.’ split Split a file into fixed-size pieces ss Socket Statistics ssh Secure Shell client (remote login program) stat Display file or file system status strace Trace system calls and signals su Substitute user identity sudo Execute a command as another user sum Print a checksum for a file suspend Suspend execution of this shell • sync Synchronize data on disk with memory tail Output the last part of file tar Store, list or extract files in an archive tee Redirect output to multiple files test Evaluate a conditional expression time Measure Program running time timeout Run a command with a time limit times User and system times touch Change file timestamps top List processes running on the system tput Set terminal-dependent capabilities, color, position traceroute Trace Route to Host trap Execute a command when the shell receives a signal • tr Translate, squeeze, and/or delete characters true Do nothing, successfully tsort Topological sort tty Print filename of terminal on stdin type Describe a command • ulimit Limit user resources • umask Users file creation mask umount Unmount a device unalias Remove an alias • uname Print system information unexpand Convert spaces to tabs uniq Uniquify files units Convert units from one scale to another unrar Extract files from a rar archive unset Remove variable or function names unshar Unpack shell archive scripts until Execute commands (until error) uptime Show uptime useradd Create new user account userdel Delete a user account usermod Modify user account users List users currently logged in uuencode Encode a binary file uudecode Decode a file created by uuencode v Verbosely list directory contents (`ls -l -b’) vdir Verbosely list directory contents (`ls -l -b’) vi Text Editor vmstat Report virtual memory statistics w Show who is logged on and what they are doing wait Wait for a process to complete • watch Execute/display a program periodically wc Print byte, word, and line counts whereis Search the user’s $path, man pages and source files for a program which Search the user’s $path for a program file while Execute commands who Print all usernames currently logged in whoami Print the current user id and name (`id -un’) wget Retrieve web pages or files via HTTP, HTTPS or FTP write Send a message to another user xargs Execute utility, passing constructed argument list(s) xdg-open Open a file or URL in the user’s preferred application. xz Compress or decompress .xz and .lzma files yes Print a string until interrupted zip Package and compress (archive) files. . Run a command script in the current shell !! Run the last command again ### Comment / Remark A copy from https://ss64.com/bash/","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"Linux","slug":"Tech/Linux","permalink":"http://www.philsblog.info/categories/Tech/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.philsblog.info/tags/Linux/"},{"name":"CLI","slug":"CLI","permalink":"http://www.philsblog.info/tags/CLI/"}]},{"title":"Often used Linux commands","slug":"Often-used-Linux-commands","date":"2017-05-13T02:22:32.000Z","updated":"2018-04-17T00:35:24.242Z","comments":true,"path":"2017/05/13/Often-used-Linux-commands.html","link":"","permalink":"http://www.philsblog.info/2017/05/13/Often-used-Linux-commands.html","excerpt":"","text":"Unzip bz2 keep the original filebzip2 -dk filename.bz2 Find out the current Linux versioncat /etc/*-release ssh-keygen -f id_rsa -p Check hardwarelshw Change java versionupdate-alternatives -config java Change modechmod + xxx.sh ls -lahbzgrep / zgrep / grep “something” xxx.log | xmlprettify | less ( xmlbroswerfy &gt; xxx.html) zgrep RES xxxx.log | grep -v SUCCESS | less (what is grep -v) tail -2 xxx.log | xmlprettifycat xxx.log | xmlprettify bring job to foregroundfg put thread to backgroundbg setup public key on servercat ~/.ssh/id_rsa.pub | ssh user@hostname &#39;cat &gt;&gt; .ssh/authorized_keys&#39; find . -type f -name &#39;*.bz2&#39; -size +0c | while read line; do /bin/bzip2 -dc $line |/usr/bin/xz --best -c &gt; &quot;../xz/${line%.bz2}.xz&quot;; cat /dev/null &gt; $line ; done zgrep something log_name | cut -d &quot;/&quot; -f 2-4 | sort | uniq tar ????","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"Linux","slug":"Tech/Linux","permalink":"http://www.philsblog.info/categories/Tech/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.philsblog.info/tags/Linux/"},{"name":"CLI","slug":"CLI","permalink":"http://www.philsblog.info/tags/CLI/"}]},{"title":"Docker machine commands","slug":"Docker-machine-commands","date":"2017-04-16T11:38:06.000Z","updated":"2018-04-15T13:20:38.748Z","comments":true,"path":"2017/04/16/Docker-machine-commands.html","link":"","permalink":"http://www.philsblog.info/2017/04/16/Docker-machine-commands.html","excerpt":"","text":"If you are using a mac, just like a linux, you don’t need docker-machine to run docker-engine locally Basics operation123456docker-machine --versiondocker-machine start defaultdocker-machine stop defaultdocker-machine env defaultdocker-machine lsdocker-machine ssh default Create new dock machine remotely12345docker-machine create -d generic \\ --generic-ip-address=192.168.1.33 \\ --generic-ssh-user=phil \\ --generic-ssh-key ~/.ssh/id_rsa \\ newDockerMachineOfMine","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"Docker","slug":"Tools/Docker","permalink":"http://www.philsblog.info/categories/Tools/Docker/"}],"tags":[{"name":"CLI","slug":"CLI","permalink":"http://www.philsblog.info/tags/CLI/"},{"name":"Docker","slug":"Docker","permalink":"http://www.philsblog.info/tags/Docker/"}]},{"title":"My Most Used Docker Commands","slug":"My-Most-Used-Docker-Commands","date":"2017-04-14T09:08:01.000Z","updated":"2018-04-15T13:19:41.318Z","comments":true,"path":"2017/04/14/My-Most-Used-Docker-Commands.html","link":"","permalink":"http://www.philsblog.info/2017/04/14/My-Most-Used-Docker-Commands.html","excerpt":"","text":"Check info1234567891011121314151617181920212223docker versiondocker --versiondocker-compose versiondocker-compose --versiondocker ps / docker container lsdocker images / docker image lsdocker inspect [OPTIONS] NAME|ID [NAME|ID...] [flags]docker eventsdocker events --since=&quot;20150720&quot; --until=&quot;20150808&quot;docker port CONTAINER [PRIVATE_PORT[/PROTO]]docker top CONTAINER [ps OPTIONS]docker statsdocker diff CONTAINERdocker infodocker logs (-f &lt;container name or ID&gt;)service docker statussudo service docker start|stop Operations12345678910111213141516171819202122232425262728docker logindocker container stop xxxdocker container ls -adocker container rm xxxdocker image lsdocker image rm# search image that has at least 3 likes and can be built automattically# 搜索处收藏数不小于 3 ，并且能够自动化构建的 django 镜像，并且完整显示镜像描述docker search -s 3 --automated --no-trunc djangodocker pull# remove all local imagesdocker rmidocker rmi &apos;docker images -a -q&apos;docker run xxx# expose portsdocker run -d -p 127.0.0.1:33301:22 centos6-ssh# docker deamon listen to fd and port 2376sudo dockerd -H fd:// -H tcp://0.0.0.0:2376# import docker imagecat centos-6-x86_64.tar.gz | docker import - centos:latest Pull an image example12345678mysqlsudo docker pull mysqlsudo docker run --name first-mysql -p 3306:3306 -e MYSQL\\_ROOT\\_PASSWORD=123456 -d mysqlrun 运行一个容器--name 后面是这个镜像的名称-p 3306:3306 表示在这个容器中使用3306端口(第二个)映射到本机的端口号也为3306(第一个)-d 表示使用守护进程运行，即服务挂在后台docker ps -a Create new user group1234# Add the docker group if it doesn&apos;t already exist.sudo groupadd docker# Don&apos;t forget to log outsudo gpasswd -a $&#123;USER&#125; docker Create a new Docker image1touch Dockerfile add the code following to Dockerfile123FROM alpineCMD [&quot;echo&quot;, &quot;hello world!&quot;] run the following command12docker build .docker run --name test xxxxxxthe id","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"Docker","slug":"Tools/Docker","permalink":"http://www.philsblog.info/categories/Tools/Docker/"}],"tags":[{"name":"CLI","slug":"CLI","permalink":"http://www.philsblog.info/tags/CLI/"},{"name":"Docker","slug":"Docker","permalink":"http://www.philsblog.info/tags/Docker/"}]},{"title":"2e Systems GmbH","slug":"2e-Systems-GmbH","date":"2017-03-21T22:55:59.000Z","updated":"2018-03-27T23:15:05.127Z","comments":true,"path":"2017/03/22/2e-Systems-GmbH.html","link":"","permalink":"http://www.philsblog.info/2017/03/22/2e-Systems-GmbH.html","excerpt":"","text":"Java Backend developerMelbourne, VIC 2016 - Present Description: 2e Systems is a highly versatile software development company specializing in web, mobile and communications solutions for the airline industry. Leading in systems integration, we empower airlines to apply the best of breed concept in developing their ideal platform. We are fast and flexible, with a dynamic team of experts that can deliver and support innovative, cost-effective solutions. The company was founded in February 2000 near Frankfurt, Germany, and has grown to include offices in Croatia, the UK, Australia, Ireland and the USA. Responsibilities: Development of complex, dynamic applications Analysis of requirements Evaluation and prioritization of activities Interact with project managers and customers Back End part of an international development team Full life-cycle of projects from concept to production Collaborate closely with European colleagues and clients 2e-systems homepage","categories":[{"name":"Work history","slug":"Work-history","permalink":"http://www.philsblog.info/categories/Work-history/"},{"name":"2e Systems GmbH","slug":"Work-history/2e-Systems-GmbH","permalink":"http://www.philsblog.info/categories/Work-history/2e-Systems-GmbH/"}],"tags":[{"name":"Work history","slug":"Work-history","permalink":"http://www.philsblog.info/tags/Work-history/"}]},{"title":"Git CLI","slug":"Git-CLI","date":"2017-02-15T09:53:41.000Z","updated":"2018-03-27T11:05:34.649Z","comments":true,"path":"2017/02/15/Git-CLI.html","link":"","permalink":"http://www.philsblog.info/2017/02/15/Git-CLI.html","excerpt":"","text":"Commands Sequence Git Basics name Description master default development branch origin default upstream repository HEAD current branch HEAD^ parent of HEAD HEAD~4 the great-great grandparent of HEAD CreateFrom existing data123cd ~/projects/myprojectgit initgit add . From existing repo123git clone ~/existing/repo ~/new/repogit clone git://host.org/project.gitgit clone ssh://you@host.org/proj.git Show Description Command Files changed in working directory git status Changes to tracked files git diff What changed between $ID1 and $ID2 git diff $id1 $id2 History of changes git log History of changes for file with diffs git log -p $file $dir/ec/tory/ Who changed what and when in a file git blame $file A commit identified by $ID git show $id A specific file from a specific $ID git show $id:$file All local branches git branch Revert Description Command Return to the last committed state git reset –hard Revert the last commit git revert HEAD Revert specific commit git revert $id Fix the last commit git commit -a –amend Checkout the $id version of a file git checkout $id $file Branch Description Command Switch to the $id branch git checkout $id Merge branch1 into branch2 git checkout $branch2git merge $branch1 Create branch named $branch bansed onthe HEAD git branch $branch Create branch $new_branch based on branch$other and switch to it git checkout -b $new_branch $other Delete branch $branch git branch -d $branch Update Description Command Fetch latest changes from origin(but this does not merge them). git fetch Pull latest changes from origin(does a fetch followed by a merge) git pull Apply a patch that some sent you git am -3 patch.mbox Push|Commit all your local changes|git commit -a||Prepare a patch for other developers|git format-patch origin||Push changes to origin|git push||Mark a version / milestone|git tag v1.0| Useful CommandsTo view the merge conclicts1234git diffgit diff --base $filegit diff --ours $filegit diff --theirs $file To discard conflicting patch12git reset --hardgit rebase --skip After resolving conflicts, merge with12git add $conflicting_filegit rebase --continue Finding regressions123456git bisect startgit bisect good $idgit bisect bad $idgit bisect bad/goodgit bisect visualizegit bisect reset Check for errors and cleanup repository12git fsckgit gc --prune Search working directory for foo()1git grep &quot;foo()&quot;","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"Version Control","slug":"Tools/Version-Control","permalink":"http://www.philsblog.info/categories/Tools/Version-Control/"}],"tags":[{"name":"Version Control","slug":"Version-Control","permalink":"http://www.philsblog.info/tags/Version-Control/"},{"name":"Git","slug":"Git","permalink":"http://www.philsblog.info/tags/Git/"}]},{"title":"Java Currency","slug":"Java-Currency","date":"2017-01-27T09:31:02.000Z","updated":"2018-03-27T23:13:57.637Z","comments":true,"path":"2017/01/27/Java-Currency.html","link":"","permalink":"http://www.philsblog.info/2017/01/27/Java-Currency.html","excerpt":"","text":"Use Thread There are three ways of using Thread: Implementes Runnable interface Implementes Callable interface Extends Thread class Implemeting Runnable and Callable does not create a new real thead, it only creates a new task and will be invoked by Thread. So i.e. Task is Thread driven. Implement Runnable interfaceImplement run() method and called by start() from a thread 12345678910public class MyRunnable implements Runnable &#123; public void run() &#123; // ... &#125; public static void main(String[] args) &#123; MyRunnable instance = new MyRunnable(); Tread thread = new Thread(instance); thread.start(); &#125;&#125; Implement Callable interfaceImplementing call() method will have return value, the value will be encapsulated in FutureTask 123456789101112public class MyCallable implements Callable&lt;Integer&gt; &#123; public Integer call() &#123; // ... &#125; public static void main(String[] args) &#123; MyCallable mc = new MyCallable(); FutureTask&lt;Integer&gt; ft = new FutureTask&lt;&gt;(mc); Thread thread = new Thread(ft); thread.start(); System.out.println(ft.get()); &#125;&#125; Extend Thread classImplement run() methond and call start by thread123456789public class MyThread extends Thread &#123; public void run() &#123; // ... &#125; public static void main(String[] args) &#123; MyThread mt = new MyThread(); mt.start(); &#125;&#125; Implementing Interface VS Extending Thread ClassImplementing interface is better, because: Java doesn’t support multi-extend, so if a class extends Thread, then it cannot extend other classes. Extending Thread has too much overhead Thread mechanismThread.sleep(millisec) will put current thread to sleep. Can use TimeUnit.TILLISECONDS.sleep(millisec) instead. sleep() will through interruptedException. Exception cannot cross threads to main(), so it has to be handled in the local thread. 123456789public void run() &#123; try &#123; // ... Thread.sleep(1000); // ... &#125; catch (InterruptedException e) &#123; System.err.println(e); &#125;&#125; Thread.yield() means the current thead has finished its job, it can hand over to other threads. Calling join() from another thread would cause the suspension of the current thread, until the target thread finish. deamon thread is the Program Runtime thread service in the background. Use setDaemon() to put a thread in the background. Kill a threadStopA thread can be stop by the following: Call Thread.sleep() method Call wait() to suspend thread untill notify() or notifyAll() is called, Or the signal() signalAll() in java.util.concurrent Until some I/O finish Try to call the sync control method on an object, cannot use object lock, since the thread has got the lock. Interrupt","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"Java","slug":"Tech/Java","permalink":"http://www.philsblog.info/categories/Tech/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://www.philsblog.info/tags/Java/"}]},{"title":"Git vs Mercurial: Why Git? Why Mercurial?","slug":"Git-vs-Mercurial-Why-Git-Why-Mercurial","date":"2016-12-04T06:01:24.000Z","updated":"2018-03-27T07:01:45.396Z","comments":true,"path":"2016/12/04/Git-vs-Mercurial-Why-Git-Why-Mercurial.html","link":"","permalink":"http://www.philsblog.info/2016/12/04/Git-vs-Mercurial-Why-Git-Why-Mercurial.html","excerpt":"","text":"I used to use SVN and Git, never used CVS and never heard about Mercurial. Okay, recently I joined a new company, and they use Mercurial hg, so I read some articles about it. Since Git is very popular nowadays, I would like to compare Mercurial to Git, to find what are different between them, what are the same? And which to choose. Git vs Mercurial: Why Git?Mercurial vs Git: Why Mercurial? First, I find these two articles, one prefers Git and the other likes Mercurial, but the tricky thing is both of them believe they pick the right one with a safer history control. If we have a closer look, we’d know that both of them are well in a given situation. According to Charles O’Farrel, Git never deletes or modify something, the only thing you can do is commit, making a new object without eliminating the old one, keep the old one for 30 days then delete them if they do not have a reference. Mercurial do not have such features unless installing extensions, which have a few more steps to do than Git. On the contrary, Steve Losh claims that it is risky to give users easy access to destructive commands, since they may not fully understand the commands, and sometimes, the git commands which have more arguments are a bit more complicated than Hg’s. Besides, you might lose the history completely in 30 days, but you will never lose them in Mercurial since most of the extensions will permanently back up any changesets that they destroy into a bundle, and these bundles will not be garbage collected, so “you don’t have to worry about your version control system eating your data”. As mention above, Mercurial has more specific commands for each purpose, Git use less command with different arguments, the author in the second article prefers Mercurial, due to “ each command should do one thing and do it well”, which follows the UNIX philosophy.","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"Version Control","slug":"Tools/Version-Control","permalink":"http://www.philsblog.info/categories/Tools/Version-Control/"}],"tags":[{"name":"Version Control","slug":"Version-Control","permalink":"http://www.philsblog.info/tags/Version-Control/"},{"name":"Git","slug":"Git","permalink":"http://www.philsblog.info/tags/Git/"},{"name":"hg","slug":"hg","permalink":"http://www.philsblog.info/tags/hg/"}]},{"title":"Mercurial hg CLI","slug":"Mercurial-hg-CLI","date":"2016-12-04T05:57:39.000Z","updated":"2018-04-15T08:14:43.722Z","comments":true,"path":"2016/12/04/Mercurial-hg-CLI.html","link":"","permalink":"http://www.philsblog.info/2016/12/04/Mercurial-hg-CLI.html","excerpt":"","text":"Synopsis1hg command [option]... [argument]... addadd the specified files on the next commit:1hg add [OPTION]… [FILE]… addremoveadd all new files, delete all missing files: 1hg addremove [OPTION]... [FILE]... Add all new files and remove all missing files from the repository. annotateshow changeset information by line for each file:1hg annotate [-r REV] [-f] [-a] [-u] [-d] [-n] [-c] [-l] FILE... List changes in files, showing the revision id responsible for each line. archivecreate an unversioned archive of a repository revision: 1hg archive [OPTION]... DEST By default, the revision used is the parent of the working directory; use -r/–rev to specify a different revision. backoutreverse effect of earlier changeset:1hg backout [OPTION]... [-r] REV Prepare a new changeset with the effect of REV undone in the current working directory. If no conflicts were encountered, it will be committed immediately. brancheslist repository named branches: 1hg branches [-c] List the repository’s named branches, indicating which ones are inactive. If -c/–closed is specified, also list branches which have been marked closed catoutput the current or given revision of files:1hg cat [OPTION]... FILE... Print the specified files as they were at the given revision. If no revision is given, the parent of the working directory is used. clonemake a copy of an existing repository: 1hg clone [OPTION]... SOURCE [DEST] Create a copy of an existing repository in a new directory. commitcommit the specified files or all outstanding changes: 1hg commit [OPTION]... [FILE]... Commit changes to the given files into the repository. Unlike a centralized SCM, this operation is a local operation. configshow combined config settings from all hgrc files:1hg config [-u] [NAME]... With no arguments, print names and values of all config items.With one argument of the form section.name, print just the value of that config item.With multiple arguments, print names and values of all config items with matching section names. copymark files as copied for the next commit: 1hg copy [OPTION]... [SOURCE]... DEST Mark dest as having copies of source files. If dest is a directory, copies are put in that directory. If dest is a file, the source must be a single file. diffdiff repository (or selected files): 1hg diff [OPTION]... ([-c REV] | [-r REV1 [-r REV2]]) [FILE]... Show differences between revisions for the specified files.Differences between files are shown using the unified diff format. exportdump the header and diffs for one or more changesets: 1hg export [OPTION]... [-o OUTFILESPEC] [-r] [REV]... Print the changeset header and diffs for one or more revisions. If no revision is given, the parent of the working directory is used.","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"Version Control","slug":"Tools/Version-Control","permalink":"http://www.philsblog.info/categories/Tools/Version-Control/"}],"tags":[{"name":"CLI","slug":"CLI","permalink":"http://www.philsblog.info/tags/CLI/"},{"name":"Version Control","slug":"Version-Control","permalink":"http://www.philsblog.info/tags/Version-Control/"},{"name":"hg","slug":"hg","permalink":"http://www.philsblog.info/tags/hg/"}]},{"title":"Another neat tool -- automate your build process using Java and Ant","slug":"Another-neat-tool-automate-your-build-process-using-Java-and-Ant","date":"2016-12-03T05:47:06.000Z","updated":"2018-03-27T23:22:55.576Z","comments":true,"path":"2016/12/03/Another-neat-tool-automate-your-build-process-using-Java-and-Ant.html","link":"","permalink":"http://www.philsblog.info/2016/12/03/Another-neat-tool-automate-your-build-process-using-Java-and-Ant.html","excerpt":"","text":"Apache Ant is a Java library and command-line tool whose mission is to drive processes described in build files as targets and extension points dependent upon each other. The main known usage of Ant is the build of Java applications. — ant.apache.org ANT is similar to Make, the most immediately noticeable difference between Ant and Make is that Ant uses XML to describe the build process and its dependencies, whereas Make uses Makefile format. By default the XML file is named build.xml. Ant is an Apache project. It is open source software, and is released under the Apache License. — Wikipedia A build file looks like this: 1234567891011121314151617181920&lt;project&gt; &lt;target name=\"clean\"&gt; &lt;delete dir=\"build\"/&gt; &lt;/target&gt; &lt;target name=\"compile\"&gt; &lt;mkdir dir=\"build/classes\"/&gt; &lt;javac srcdir=\"src\" destdir=\"build/classes\"/&gt; &lt;/target&gt; &lt;target name=\"jar\"&gt; &lt;mkdir dir=\"build/jar\"/&gt; &lt;jar destfile=\"build/jar/HelloWorld.jar\" basedir=\"build/classes\"&gt; &lt;manifest&gt; &lt;attribute name=\"Main-Class\" value=\"oata.HelloWorld\"/&gt; &lt;/manifest&gt; &lt;/jar&gt; &lt;/target&gt; &lt;target name=\"run\"&gt; &lt;java jar=\"build/jar/HelloWorld.jar\" fork=\"true\"/&gt; &lt;/target&gt;&lt;/project&gt; Now compile, package and run the application via 123ant compileant jarant run or shorter with1ant compile jar run We can build the same project with pure java command12345678910111213md build\\classesjavac -sourcepath src -d build\\classes src\\oata\\HelloWorld.javaecho Main-Class: oata.HelloWorld&gt;mfmd build\\jarjar cfm build\\jar\\HelloWorld.jar mf -C build\\classes .java -jar build\\jar\\HelloWorld.jar Enhance the build file123456789101112131415161718192021222324252627&lt;project name=\"HelloWorld\" basedir=\".\" default=\"main\"&gt; &lt;property name=\"src.dir\" value=\"src\"/&gt; &lt;property name=\"build.dir\" value=\"build\"/&gt; &lt;property name=\"classes.dir\" value=\"$&#123;build.dir&#125;/classes\"/&gt; &lt;property name=\"jar.dir\" value=\"$&#123;build.dir&#125;/jar\"/&gt; &lt;property name=\"main-class\" value=\"oata.HelloWorld\"/&gt; &lt;target name=\"clean\"&gt; &lt;delete dir=\"$&#123;build.dir&#125;\"/&gt; &lt;/target&gt; &lt;target name=\"compile\"&gt; &lt;mkdir dir=\"$&#123;classes.dir&#125;\"/&gt; &lt;javac srcdir=\"$&#123;src.dir&#125;\" destdir=\"$&#123;classes.dir&#125;\"/&gt; &lt;/target&gt; &lt;target name=\"jar\" depends=\"compile\"&gt; &lt;mkdir dir=\"$&#123;jar.dir&#125;\"/&gt; &lt;jar destfile=\"$&#123;jar.dir&#125;/$&#123;ant.project.name&#125;.jar\" basedir=\"$&#123;classes.dir&#125;\"&gt; &lt;manifest&gt; &lt;attribute name=\"Main-Class\" value=\"$&#123;main-class&#125;\"/&gt; &lt;/manifest&gt; &lt;/jar&gt; &lt;/target&gt; &lt;target name=\"run\" depends=\"jar\"&gt; &lt;java jar=\"$&#123;jar.dir&#125;/$&#123;ant.project.name&#125;.jar\" fork=\"true\"/&gt; &lt;/target&gt; &lt;target name=\"clean-build\" depends=\"clean,jar\"/&gt; &lt;target name=\"main\" depends=\"clean,run\"/&gt;&lt;/project&gt; just do an ant and you will get123456789101112Buildfile: build.xmlclean:compile: [mkdir] Created dir: C:\\...\\build\\classes [javac] Compiling 1 source file to C:\\...\\build\\classesjar: [mkdir] Created dir: C:\\...\\build\\jar [jar] Building jar: C:\\...\\build\\jar\\HelloWorld.jarrun: [java] Hello Worldmain:BUILD SUCCESSFUL","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"ANT","slug":"Tools/ANT","permalink":"http://www.philsblog.info/categories/Tools/ANT/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/tags/Tools/"},{"name":"ANT","slug":"ANT","permalink":"http://www.philsblog.info/tags/ANT/"}]},{"title":"Useful commands that are built in the Ant distribution","slug":"Useful-commands-that-are-built-in-the-Ant-distribution","date":"2016-12-03T05:38:03.000Z","updated":"2018-03-27T23:23:09.495Z","comments":true,"path":"2016/12/03/Useful-commands-that-are-built-in-the-Ant-distribution.html","link":"","permalink":"http://www.philsblog.info/2016/12/03/Useful-commands-that-are-built-in-the-Ant-distribution.html","excerpt":"","text":"Here are some commands Command Description Ant Used to execute another ant process from within the current one. Cotydir Used to copy an entire directory. Copyfile Used to copy a single file. Cvs Handles packages/modules retrieved from a CVS repository. Delete Deletes either a single file or all files in a specified directory and its sub-directories. Deltree Deletes a directory with all its files and subdirectories. Exec Executes a system command. When the os attribute is specified, then the command is only executed when Ant is run on one of the specified operating systems. Get Gets a file from an URL. Jar Jars a set of files. Java Executes a Java class within the running (Ant) VM or forks another VM if specified. Javac Compiles a source tree within the running (Ant) VM. Javadoc/javadoc2 Generates code documentation using the javadoc tool. Mkdir Makes a directory. Property Sets a property (by name and value), or set of properties (from file or resource) in the project. Rmic Runs the rmic compiler for a certain class. Tstamp Sets the DSTAMP, TSTAMP, and TODAY properties in the current project. Style Processes a set of documents via XSLT.","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"},{"name":"ANT","slug":"Tools/ANT","permalink":"http://www.philsblog.info/categories/Tools/ANT/"}],"tags":[{"name":"ANT","slug":"ANT","permalink":"http://www.philsblog.info/tags/ANT/"},{"name":"TOOLS","slug":"TOOLS","permalink":"http://www.philsblog.info/tags/TOOLS/"}]},{"title":"MySQL bottleneck analysis","slug":"MySQL-bottleneck-analysis","date":"2016-11-14T05:29:35.000Z","updated":"2018-03-27T07:02:17.347Z","comments":true,"path":"2016/11/14/MySQL-bottleneck-analysis.html","link":"","permalink":"http://www.philsblog.info/2016/11/14/MySQL-bottleneck-analysis.html","excerpt":"","text":"Find bottleneck IOPS Input/output operations per second (IOPS, pronounced eye-ops) is a performance measurement used to characterize computer storage devices like hard disk drives (HDD), solid state drives (SSD), and storage area networks (SAN). – Wikipedia’ IOAny system that involves with storage has IO bottleneck. Databases are just some data files, so interacting with a database is an IO operation. There are two situations when we are using MySQL, OLTP and OLAP. They is a difference regarding the aspect of using MySQL. OLTP: On-line Transaction Processing, business, focus on concurrency.OLAP: On-line Analytical Processing, log and data warehousing, focus on throughput. There will be an option when you install MySQL on Windows. CPUBe careful when using order and group by, since both of them consume computing resources, which means more CPU usage. NetworkIn a distributed environment, each node between databases is more likely to become a bottleneck. When bottleneck detected1) Hardware, OS, Network IO ( add more memory; improve IO performance) CPU (Multi-core) Network (MPLS）","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"SQL","slug":"Tech/SQL","permalink":"http://www.philsblog.info/categories/Tech/SQL/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://www.philsblog.info/tags/SQL/"},{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/tags/Tech/"}]},{"title":"JasperReport","slug":"JasperReport","date":"2016-11-13T05:20:05.000Z","updated":"2018-03-27T06:59:17.625Z","comments":true,"path":"2016/11/13/JasperReport.html","link":"","permalink":"http://www.philsblog.info/2016/11/13/JasperReport.html","excerpt":"","text":"JasperReports is an open source Java reporting tool that can write to a variety of targets, such as: screen, a printer, into PDF, HTML, Microsoft Excel, RTF, ODT, Comma-separated values or XML files. It can be used in Java-enabled applications, including Java EE or web applications, to generate dynamic content. –Wikipedia Download it, unzip it. JasperReport Lib cannot run alone and we don’t really need to install it, we only need to cp it to classpath directory with all other jar files. JasperReport using AWT generate report, if using terminal and terminal only, then JasperReport is not a good choice. Generate report 123456789101112131415161718192021222324252627282930package jasperreport.javabean; import java.util.Date; public class User &#123; private String username; private Date birthday; public User(String username, Date birthday) &#123; this.username = username; this.birthday = birthday; &#125; public String getUsername() &#123; return username; &#125; public void setUsername(String username) &#123; this.username = username; &#125; public Date getBirthday() &#123; return birthday; &#125; public void setBirthday(Date birthday) &#123; this.birthday = birthday; &#125; &#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344package jasperreport.javabean; import java.io.InputStream; import java.util.ArrayList; import java.util.Date; import java.util.HashMap; import java.util.List; import java.util.Map; import net.sf.jasperreports.engine.JRExporterParameter; import net.sf.jasperreports.engine.JasperFillManager; import net.sf.jasperreports.engine.JasperPrint; import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource; import net.sf.jasperreports.engine.export.JRTextExporter; import net.sf.jasperreports.engine.export.JRTextExporterParameter; public class JasperReportWithJavaBean &#123; public static void export() throws Exception&#123; InputStream inputStream = JasperReportWithJavaBean.class.getResourceAsStream(&quot;JavaBeanReport.jasper&quot;); Map&lt;Object,Object&gt; parameters = new HashMap&lt;Object,Object&gt;(); List&lt;User&gt; users = new ArrayList&lt;User&gt;(); users.add(new User(&quot;user_01&quot;,new Date())); users.add(new User(&quot;user_02&quot;,new Date())); users.add(new User(&quot;user_03&quot;,new Date())); JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(users); JasperPrint jasperPrint = JasperFillManager.fillReport(inputStream, parameters, dataSource); JRTextExporter exporter = new JRTextExporter(); exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint); exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, &quot;javabean.txt&quot;); exporter.setParameter(JRTextExporterParameter.PAGE_WIDTH, 200); exporter.setParameter(JRTextExporterParameter.PAGE_HEIGHT, 100); exporter.exportReport(); &#125; public static void main(String[] args) throws Exception&#123; export(); &#125; &#125; 123456789101112131415161718192021222324252627&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;JasperReport&lt;/groupId&gt; &lt;artifactId&gt;JasperReport&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;net.sf.jasperreports&lt;/groupId&gt; &lt;artifactId&gt;jasperreports&lt;/artifactId&gt; &lt;version&gt;3.7.2&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt; &lt;artifactId&gt;groovy-all&lt;/artifactId&gt; &lt;version&gt;1.7.5&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.13&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/project&gt;","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"Java","slug":"Tech/Java","permalink":"http://www.philsblog.info/categories/Tech/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://www.philsblog.info/tags/Java/"}]},{"title":"Improve SQL Query Performance","slug":"Improve-SQL-Query-Performance","date":"2016-11-03T05:34:46.000Z","updated":"2018-04-15T14:20:11.622Z","comments":true,"path":"2016/11/03/Improve-SQL-Query-Performance.html","link":"","permalink":"http://www.philsblog.info/2016/11/03/Improve-SQL-Query-Performance.html","excerpt":"","text":"In general computer system, hard-drive read operations are about ten times more than write operation and in most cases, there are no performance issues with insert operation. The problems and bottlenecks are always detected in select queries. In this page, we summarize few different methods to improve SQL query performance. Avoid * in SELECT statement. Give the name of columns which you require. Avoid nchar and nvarchar if possible since both the data types takes just double memory as char and varchar. Avoid NULL in fixed-length field. In case of requirement of NULL, use variable-length (varchar) field that takes less space for NULL. Create Clustered and Non-Clustered Indexes. Most selective columns should be placed leftmost in the key of a non-clustered index. Better to create indexes on columns that have integer values instead of characters. Integer values use less overhead than character values. Use joins instead of sub-queries. Use Stored Procedure for frequently used data and more complex queries. Keep transaction as small as possible since transaction lock the processing tables data and may results into deadlocks. Avoid prefix “sp_” with user defined stored procedure name because SQL server first search the user defined procedure in the master database and after that in the current session database.","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"SQL","slug":"Tech/SQL","permalink":"http://www.philsblog.info/categories/Tech/SQL/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://www.philsblog.info/tags/SQL/"}]},{"title":"Java Cache System","slug":"Java-Cache-System","date":"2016-10-13T05:24:59.000Z","updated":"2018-03-27T07:00:22.807Z","comments":true,"path":"2016/10/13/Java-Cache-System.html","link":"","permalink":"http://www.philsblog.info/2016/10/13/Java-Cache-System.html","excerpt":"","text":"JCS is a distributed caching system written in Java. It is intended to speed up applications by providing a means to manage cached data of various dynamic natures. Like any caching system, JCS is most useful for high read, low put applications. Latency times drop sharply and bottlenecks move away from the database in an effectively cached system. JCS 1.3 was the first official version. JCS 1.3 working on JDK 1.3+. JCS 2.0 working on JDK 1.6 and above. JCS 1.3 is stable, however it requires a lower version of JDK. JCS structure There are following jar files needed: commons-collections-2.1.1.jar commons-lang.2.3.jar commons-logging-1.0.4.jar concurrent-1.3.2.jar jcs-1.3.jar slf4j-api.jar It implements Serializable interface 12345678910111213public class UserInfo implements Serializable&#123; private String username; private String domain; public UserInfo(String name)&#123; this.username = name; &#125; public UserInfo(String name,String domain)&#123; this.username= name; this.domain =domain; &#125; &#125; Define Cache Class 12345678910111213141516171819202122232425262728293031323334353637383940 public class UserManager&#123; private JCS jcscache; private final String NAME_SPACE=\"userinfo\"; private static class UserManagerContainer&#123; private static UserManager instance = new UserManager(); &#125; public static UserManager getInstance()&#123; return UserManagerContainer.instance &#125; private UserManager()&#123; try&#123; jcscache= JCS.getInstance(NAME_SPACE); &#125; catch(CacheException e)&#123; &#125; &#125; public UserInfo get(String key)&#123; return (UserInfo) jcscache.get(key); &#125; pubilc void put(String key,UserInfo info,boolean isoverride)&#123; try&#123; if(isoverride)&#123; jcscache.put(key,info); &#125; else&#123; jcscache.putSafe(key,info); &#125; &#125; catch(CacheException e)&#123; &#125; &#125; &#125; JCS describe its functionality by configuration file, it’s easy to implement, all you need is change the values in configuration file.Configuration file: cache.ccf 12345678910111213jcs.default=DC jcs.defaultcacheattributes=org.engine.CompositeCacheAttributes jcs.defaultcacheattributes.MaxObjects=500000 jcs.defaultcacheattributes.MemoryCacheName=org.apache.jcs.engine.memory.lru.LRUMemoryCache jcs.defaultcacheattributes.UseMemoryShrinker=true jcs.defaultcacheattributes.MaxMemoryIdleTimeSeconds=1200 jcs.defaultcacheattributes.ShrinkerIntervalSeconds=30 jcs.defaultcacheattributes.MaxSpoolPerRun=500 jcs.default.elementattributes=org.apache.jcs.engine.ElementAttributes jcs.default.elementattributes.IsEternal=false jcs.auxiliary.DC=org.apache.jcs.auxiliary.disk.indexed.IndexedDiskCacheFactory jcs.auxiliary.DC.attributes=org.apache.jcs.auxiliary.disk.indexed.IndexedDiskCacheAttribute jcs.auxiliary.DC.attributes.DiskPatch=d:/memory","categories":[{"name":"Tech","slug":"Tech","permalink":"http://www.philsblog.info/categories/Tech/"},{"name":"Java","slug":"Tech/Java","permalink":"http://www.philsblog.info/categories/Tech/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://www.philsblog.info/tags/Java/"},{"name":"cache","slug":"cache","permalink":"http://www.philsblog.info/tags/cache/"}]},{"title":"Markdown all you need to know","slug":"Markdown-all-you-need-to-know","date":"2015-10-04T04:58:22.000Z","updated":"2018-04-15T12:51:51.842Z","comments":true,"path":"2015/10/04/Markdown-all-you-need-to-know.html","link":"","permalink":"http://www.philsblog.info/2015/10/04/Markdown-all-you-need-to-know.html","excerpt":"","text":"Here are lists of some of the most common use of Markdown. Headers123456# H1## H2### H3#### H4##### H5###### H6 H1H2H3H4H5H6Underline1--- three or more than three hyphens Superlink12345[linke name that would appear on the page](link address, &quot;title pop when hover&quot;)e.g.[phil&apos;s blog](http://www.philsblog.info, &quot;this is phil&apos;s blog&quot;)or you can use the link directly.&lt;http://www.philsblog.info&gt; linke name that would appear on the pagee.g.phil’s blogor you can use the link directly.http://www.philsblog.info Code referencing1use ``` at the begaining and end of your code block Highlight123*italic type***bold**~~delete~~ italic typebolddelete Image1![Alt text](https://media-cdn.tripadvisor.com/media/photo-s/0b/5d/38/4b/a-nice-small-water-fall.jpg &quot;Optional title&quot;) Lists12345678* Item* Item- Item- Item1. numbered - Mixed2. numbered * Mixed Item Item Item Item numbered Mixed numbered Mixed Blockquotes1234&gt; Quoted text.&gt; &gt; Quoted quote.&gt; * Quoted &gt; * List Quoted text. Quoted quote. Quoted List Preformatted123456Begin each line with two spaces or more to make text looke x a c t l y like you type it. Begin each line withtwo spaces or more tomake text looke x a c t l ylike you type it. Code1`This is code` This is code Code block1234~~~Code block is a bit tricky, since we are using code block to show you the syntaxyou can use three ~ surround your code~~~ 123```you can also use three ` for the same purpose``` Syntax highlighting123456```css#button &#123; border: none;&#125;``` 123#button &#123; border: none;&#125; Table12345| Tables | Are | Cool ||----------|:-------------:|------:|| col 1 is | left-aligned | $1600 || col 2 is | centered | $12 || col 3 is | right-aligned | $1 | Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1","categories":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/categories/Tools/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"http://www.philsblog.info/tags/Tools/"},{"name":"markdown","slug":"markdown","permalink":"http://www.philsblog.info/tags/markdown/"}]},{"title":"Financial Management Group","slug":"Financial-Management-Group","date":"2015-06-27T07:05:36.000Z","updated":"2018-04-15T04:22:33.414Z","comments":true,"path":"2015/06/27/Financial-Management-Group.html","link":"","permalink":"http://www.philsblog.info/2015/06/27/Financial-Management-Group.html","excerpt":"","text":"J2EE developerMelbourne, VIC 2015 - 2016 Description: BCM is a business coach model system that helps investors in making decisions and learning how to make a portfolio. The system provides users with a wide range of companies and share’s information including analyzed history data. Based on a specially designed weighted-evaluation method, users can easily and quickly learn how to make investments. Responsibilities: Utilized the various J2EE design patterns like Front View Controller, Business Delegate, Factory , Singleton and DAO to develop the business modules based on the required functionality. Designed and maintained the financial system on Glassfish. Analyzed and processed raw input data from source company. Developed visualized and responsive web pages using amChart.js, dataTables, jQuery, bootstrap. Maintaining and building mySQL database by using phpMyAdmin. Developed custom JSF Components. Used JavaScript for Client Side validations. Involved in writing AJAX scripts for the requests to process quickly. Used Spring IOC to inject Services and their dependencies. Implemented Stateless Session Beans to implement the business logic as a service. Used SVN as repository for all Project related documents. Used Log4j package for the debugging, info and error tracings. BCMFinancial Management GroupEnvironment: Core Java, J2EE, J2SE 5.0, Servlets, Spring, JPA, JNDI, mySql, JSF 2.0, Ajax, SVN, NetBeans and Log4j.","categories":[{"name":"Work history","slug":"Work-history","permalink":"http://www.philsblog.info/categories/Work-history/"},{"name":"Financial Management Group","slug":"Work-history/Financial-Management-Group","permalink":"http://www.philsblog.info/categories/Work-history/Financial-Management-Group/"}],"tags":[{"name":"Work history","slug":"Work-history","permalink":"http://www.philsblog.info/tags/Work-history/"}]},{"title":"Hello World","slug":"hello-world","date":"2013-09-04T02:58:22.000Z","updated":"2018-03-27T23:22:15.520Z","comments":true,"path":"2013/09/04/hello-world.html","link":"","permalink":"http://www.philsblog.info/2013/09/04/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"State Grid Fiberlink Inc.","slug":"State-Grid-Fiberlink-Corporation","date":"2012-11-13T06:10:06.000Z","updated":"2018-04-15T04:23:35.852Z","comments":true,"path":"2012/11/13/State-Grid-Fiberlink-Corporation.html","link":"","permalink":"http://www.philsblog.info/2012/11/13/State-Grid-Fiberlink-Corporation.html","excerpt":"","text":"Junior Java DeveloperBeijing, China, 2011 - 2013 Description: Smart Home is state-funded home automation system. Consumers could easily connect and control all the household appliances through Smart sockets and their smart phones. It is also convenient to manage the consumption of electrical power and switch the electricity plans through the system.Responsibilities: Developed and published apps for the Android platform using Android SDK, JavaSE 6, eclipse IDE and the Android AVD. Participated in a program of weekly seminar about mobile devices, with emphasis on the Android platform. Developed Web applications using Core Java, Java Script, MVC, OOD, OOP, and client side validation using java Script, business service layer using MVC. Research and Development of REST services and migration of existing SOAP services to REST services along with implementation of new services in REST. Also participated in several Linux technical training classes, including an Introduction to the Linux Kernel for Application Engineers, Advanced Linux Kernel and Device Drivers for Linux (prepare for Smart Socket and Smart Router development). Writing efficient, maintainable and reusable code that preserves privacy and security. Proficient in object-oriented design, data structures, problem solving, complexity analysis, and debugging. Regarded as a self-motivated and well organized team player. Smart Home for AndroidFiberlink Environment: Core Java, J2EE, ADT, Android SDK 2.2, JavaSE 6, RESTful web service, Spring, JPA, JNDI, oracle sql, SVN, Eclipse.","categories":[{"name":"Work history","slug":"Work-history","permalink":"http://www.philsblog.info/categories/Work-history/"},{"name":"State Grid Fiberlink Inc.","slug":"Work-history/State-Grid-Fiberlink-Inc","permalink":"http://www.philsblog.info/categories/Work-history/State-Grid-Fiberlink-Inc/"}],"tags":[{"name":"Work history","slug":"Work-history","permalink":"http://www.philsblog.info/tags/Work-history/"}]}]}